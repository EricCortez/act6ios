import Cocoa
infix operator +++


func +++(a:Int, b:Int)->Double
{
    let n1 = Double(a)
    let n2 = Double(b)
    return pow(n1, n2)
}

8+++6
var orde = [2,5,3,4]
prefix operator |>
prefix func |> (coleccion:Array<Int>)->Array<Int>
{
return coleccion.sorted()
}
|>orde

class modificar
{
    var valores:[Int]
    init(modi:[Int])
    {
        self.valores = modi
    }
    subscript(index: Int)->Int{
        get{
            return valores[index]
        }
        set(pote)
        {
            valores[index] = valores[index] * pote
        }
    }
}
let vf = modificar(modi: orde)
vf[2]
vf[1]=9
orde
vf.valores


struct Posicion{
    var posicion:CGPoint
    init(pos:CGPoint) {
        self.posicion = pos
    }
    subscript(index:Int)->CGPoint{
        get
        {
        return self.posicion
        }
        set(posn)
        {
        self.posicion = posn
        }
    }
}
var pos = Posicion(pos: CGPoint(x:3.3, y:1.2))
pos.posicion
pos.posicion = CGPoint (x:9.6, y:7.7)
pos.posicion

var buscador = ["A":1, "B":2,"C":3]
func ExisteValor (encontrar:String){
    guard let si = buscador[encontrar] else
    {
        print("no existe")
        return
    }
    print("El valor \(si)  existe")
}

ExisteValor(encontrar:"A")
